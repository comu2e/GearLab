on:
  push:
    branches:
      - master

name: Deploy to Amazon ECS on Staging

jobs:
  
        
  deploy:
    name: Deploy
    runs-on: ubuntu-18.04
    steps:

      - id: install-aws-cli
        uses: unfor19/install-aws-cli-action@v1
        with:
          version: 2 # default
          verbose: false # default
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP 7.3
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.3
 
      - name: install php zip
        run : | 
              sudo apt autoremove
              sudo apt-get update  
              sudo apt-get install php7.3-zip 
        
      - name: Composer install
        uses: php-actions/composer@v5
        with:
         php_version: 7.3
         progress: yes
         version: latest
         command: update
      - name: Run test suite
        run: composer run-script test

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR # ECRイメージPush
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPO_NAME }}
        working-directory: ./
        run: |
          echo $ECR_REPOSITORY
          IMAGE_TAG=latest
          docker build -t 499506883380.dkr.ecr.ap-northeast-1.amazonaws.com/nginx:latest -f nginx.Dockerfile .
          docker push 499506883380.dkr.ecr.ap-northeast-1.amazonaws.com/nginx:latest

          docker build -t 499506883380.dkr.ecr.ap-northeast-1.amazonaws.com/php:latest -f php.Dockerfile .
          docker push 499506883380.dkr.ecr.ap-northeast-1.amazonaws.com/php:latest

      - name: Download task definition
        run: |
              aws ecs describe-task-definition --task-definition gearlab-task-definition --query taskDefinition > task-definition.json

      - name: Render Amazon ECS task definition for 1st container
        id: render-web-container
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: nginx
          image: 499506883380.dkr.ecr.ap-northeast-1.amazonaws.com/nginx:latest

      - name: Render Amazon ECS task 2nd definition
        id: render-container
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: php
          image: 499506883380.dkr.ecr.ap-northeast-1.amazonaws.com/php:latest

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.render-container.outputs.task-definition }}
          service: gearlab-service
          cluster: gearlab-cluster
          wait-for-service-stability: true





